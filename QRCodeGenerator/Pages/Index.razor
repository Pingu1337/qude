@page "/"
@using QRCoder
@using System.Drawing
@using System.Drawing.Imaging
@using System.IO
@using Color = MudBlazor.Color
@using System.Threading;
@using MudBlazor.Utilities
@using CurrieTechnologies.Razor.Clipboard

@inject IJSRuntime JSRuntime
@inject NavigationManager uriHelper
@inject ClipboardService clipboard
@inject ISnackbar Snackbar

<div id="content">

    <h1>QR Code Generator</h1>

    @if (!coffee)
    {
        <div class="radio-container">
            <MudForm>
                <MudRadioGroup @bind-SelectedOption="@SelectedOption" Style="display: flex;">
                    <MudRadio Style="margin-left: 10px; margin-right:16px;" Option="@("Radio 1")" Color="Color.Primary">url</MudRadio>
                    <MudRadio Option="@("Radio 2")" Color="Color.Primary">wifi</MudRadio>
                </MudRadioGroup>
            </MudForm>
        </div>
    }
    else
    {
        <MudPaper Class="paper-class">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="@ForceReload">New QR Code</MudButton>
            <div class="coffee-div" style="margin-top: 10px; margin-bottom: 50px; margin-left: auto; margin-right: auto; display: flex; flex-direction: column;">
                <MudText Style="padding: 10px;" Color="Color.Tertiary">Enjoy this free online tool?</MudText>
                <MudButton Style="width: 210px; margin-left: auto; margin-right: auto; " Variant="Variant.Outlined" EndIcon="@Icons.Outlined.Coffee" Color="Color.Tertiary" Link="https://www.buymeacoffee.com/p1ngu" target="_blank">  Buy me a Coffee  </MudButton>
                <MudButton Style="width: 210px; margin-top: 10px; margin-left: auto; margin-right: auto; " Variant="Variant.Outlined" EndIcon="@Icons.Custom.Brands.Twitter" Color="Color.Info" Link="https://twitter.com/intent/tweet?hashtags=QRcode&original_referer=https%3A%2F%2Flocalhost%3A44364%2F&ref_src=twsrc%5Etfw%7Ctwcamp%5Ebuttonembed%7Ctwterm%5Eshare%7Ctwgr%5E&related=%40PinguOnl%2C%40PinguOnl&text=QR-Codes%20have%20never%20been%20easier%20to%20generate!%20Check%20out%20this%20amazing%20free%20webapp!&url=https%3A%2F%2Fwww.qude.pl%2F" target="_blank">  Share on Twitter  </MudButton>
                <MudButton Style="width: 210px; margin-top: 10px; margin-left: auto; margin-right: auto; " Variant="Variant.Outlined" EndIcon="@Icons.Outlined.Code" Color="Color.Secondary" @onclick="@(async e => { await clipboard.WriteTextAsync(textValue); Snackbar.Add("Embed code copied to clipboard!", Severity.Info);})">Embed this website</MudButton>
            </div>
        </MudPaper>
    }

    @if (SelectedOption == "Radio 1")
    {
        @if (!coffee)
        {
            <MudCard Style="Margin: auto; width: 300px; padding: 20px;">
                <MudCardContent>
                    <MudForm @ref="urlForm">
                        <MudText>Generate QR-code <i class="fas fa-qrcode" style="margin-left: 2px;"></i></MudText>
                        <MudTextField @bind-Value="@InputText" Label="Url" HelperText="e.g. https://www.wikipedia.com" Variant="Variant.Outlined" Required="true" RequiredError="url required" />

                        <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="@(async () => await UrlSubmit())">Submit</MudButton>
                    </MudForm>
                </MudCardContent>
                <MudExpansionPanels>
                    <MudExpansionPanel Text="Color" MaxHeight="170">
                        <MudColorPicker HelperText="Tip: select a light background color" style="@($"color:{ShowColorB};")" Label="Background" ColorPickerView="ColorPickerView.Spectrum" ColorPickerMode="ColorPickerMode.HEX" DisableAlpha="true" DisableModeSwitch="true" Value="_pickerColorB" ValueChanged="UpdateSelectedColor1" />
                        <MudColorPicker HelperText="Tip: select a darker foreground color" style="@($"color:{ShowColorF};")" Label="Foreground" ColorPickerView="ColorPickerView.Spectrum" ColorPickerMode="ColorPickerMode.HEX" DisableAlpha="true" DisableModeSwitch="true" Value="_pickerColorF" ValueChanged="UpdateSelectedColor2" />
                    </MudExpansionPanel>
                </MudExpansionPanels>
            </MudCard>
        }
    }

    @if (SelectedOption == "Radio 2")
    {
        @if (!coffee)
        {
            <MudCard Style="Margin:auto; width: 300px; padding:20px;">
                <MudCardContent>
                    <MudForm @ref="wifiForm">
                        <MudText>Generate QR-code for WiFi <i class="fas fa-wifi" style="margin-left: 2px;"></i></MudText>
                        <MudTextField @bind-Value="@WifiName" Label="ssid" HelperText="wifi name" Variant="Variant.Outlined" Required="true" RequiredError="WiFi name required" />

                        <MudTextField @bind-Value="@WifiPass" Label="password" HelperText="wifi password" Variant="Variant.Outlined" />

                        <MudSelect @bind-Value="@WifiAuthType" Required="true" RequiredError="Please select authentication" Label="Authentication" AnchorOrigin="Origin.BottomCenter" Style="Margin-bottom:10px;">
                            <MudSelectItem Value="@("WPA/WPA2")" />
                            <MudSelectItem Value="@("WEP")" />
                            <MudSelectItem Value="@("No Password")" />
                        </MudSelect>
                        <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="@(async () => await WifiSubmit())">Submit</MudButton>
                    </MudForm>
                </MudCardContent>
                <MudExpansionPanels>
                    <MudExpansionPanel Text="Color" MaxHeight="170">
                        <MudColorPicker HelperText="Tip: select a light background color" style="@($"color:{ShowColorB};")" Label="Background" ColorPickerView="ColorPickerView.Spectrum" ColorPickerMode="ColorPickerMode.HEX" DisableAlpha="true" DisableModeSwitch="true" Value="_pickerColorB" ValueChanged="UpdateSelectedColor1" />
                        <MudColorPicker HelperText="Tip: select a darker foreground color" style="@($"color:{ShowColorF};")" Label="Foreground" ColorPickerView="ColorPickerView.Spectrum" ColorPickerMode="ColorPickerMode.HEX" DisableAlpha="true" DisableModeSwitch="true" Value="_pickerColorF" ValueChanged="UpdateSelectedColor2" />
                    </MudExpansionPanel>
                </MudExpansionPanels>
            </MudCard>
        }
    }
    @if (!string.IsNullOrEmpty(QRCodeStr))
    {
        <MudPaper MaxWidth="auto" Style="Margin: auto;">
            <div class="qr-container">
                <img src="@QRCodeStr" />
            </div>
            <MudButton Link="@QRCodeStr" download="www.qude.pl QR_Code.png" target="_top" Variant="Variant.Outlined" Color="Color.Primary" EndIcon="@Icons.Material.Filled.ArrowDownward" Style="margin-bottom: 20px;"> Download</MudButton>
        </MudPaper>
    }
    @if (!coffee)
    {
        <MudPaper Width="300px" Style="Margin:auto; margin-top: 20px;">

            <div class="coffee-div" style="margin-top: 10px; margin-bottom: 50px;">
                <MudText Style="padding: 10px;" Color="Color.Tertiary">Enjoy this free online tool?</MudText>
                <MudButton Style="width: 210px;" Variant="Variant.Outlined" EndIcon="@Icons.Outlined.Coffee" Color="Color.Tertiary" Link="https://www.buymeacoffee.com/p1ngu" target="_blank">  Buy me a Coffee  </MudButton>
                <MudButton Style="width: 210px; margin-top:10px;" Variant="Variant.Outlined" EndIcon="@Icons.Custom.Brands.Twitter" Color="Color.Info" Link="https://twitter.com/intent/tweet?hashtags=QRcode&original_referer=https%3A%2F%2Flocalhost%3A44364%2F&ref_src=twsrc%5Etfw%7Ctwcamp%5Ebuttonembed%7Ctwterm%5Eshare%7Ctwgr%5E&related=%40PinguOnl%2C%40PinguOnl&text=QR-Codes%20have%20never%20been%20easier%20to%20generate!%20Check%20out%20this%20amazing%20free%20webapp!&url=https%3A%2F%2Fwww.qude.pl%2F" target="_blank">  Share on Twitter  </MudButton>
                <MudButton Style="width: 210px; margin-top:10px;" Variant="Variant.Outlined" EndIcon="@Icons.Outlined.Code" Color="Color.Secondary" @onclick="@(async e => { await clipboard.WriteTextAsync(textValue); Snackbar.Add("Embed code copied to clipboard!", Severity.Info);})">Embed this website</MudButton>
            </div>
        </MudPaper>
    }


    

</div>

<style>
    .colpick {
        background: red;
    }
</style>

@code
{
    //Url vars
    string InputText { get; set; }
    string QRCodeStr { get; set; }
    MudForm urlForm;

    //WiFi vars
    string WifiName { get; set; }
    string WifiPass { get; set; }
    string WifiAuthType { get; set; } = "No Password";
    MudForm wifiForm;

    //General vars
    string SelectedOption { get; set; } = "Radio 1";
    bool coffee = false;

    //Color-Picker vars
    public MudColor _pickerColorF = "#fadceb";
    public MudColor _pickerColorB = "#470630";
    public MudColor ShowColorF = "#fadceb";
    public MudColor ShowColorB = "#470630";
    public string FgColor = "#fadceb";
    public string BgColor = "#470630";

    //Embedd_vars
    string textValue = "<div style=\"display: flex; flex-direction: column; width: 400px\"><embed type=\"text/html\" src=\"https://qude.pl/\" width=\"400\" height=\"500\"><a href=\"https://qude.pl/\" target=\"_blank\" style=\"background: rgba(0,255,0,.3); height: 40px; text-decoration: none;\"><p style=\"text-decoration: none; color: black; text-align: center; font-family: helvetica; margin-top: 10px; font-size: 20px;\">Generate Free QR-Code</p></a></div>";



    private async Task UrlSubmit()
    {
        await urlForm.Validate();
        if (urlForm.IsValid)
        {
            GenerateQR();
        }
    }
    private async Task WifiSubmit()
    {
        await wifiForm.Validate();
        if (wifiForm.IsValid)
        {
            GenerateQR();
        }
    }

    void GenerateQR()
    {
        QRCodeStr = "";

        if (SelectedOption == "Radio 1")
        {
            if (!string.IsNullOrEmpty(InputText))
            {
                using (MemoryStream ms = new MemoryStream())
                {

                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                    QRCodeData qrCodeData = qrGenerator.CreateQrCode(InputText, QRCodeGenerator.ECCLevel.Q);
                    QRCode qrCode = new QRCode(qrCodeData);
                    Bitmap qrCodeImage = qrCode.GetGraphic(20, BgColor, FgColor);

                    qrCodeImage.Save(ms, ImageFormat.Png);
                    QRCodeStr = "data:image/png;base64," + Convert.ToBase64String(ms.ToArray());
                    InputText = "";
                    coffee = true;
                }
            }
            else
            {
                coffee = false;
            }
        }
        if (SelectedOption == "Radio 2")
        {
            if (!string.IsNullOrEmpty(WifiName))
            {
                if (string.IsNullOrEmpty(WifiPass))
                {
                    WifiPass = "";
                }
                var WifiAuth = PayloadGenerator.WiFi.Authentication.nopass;

                using (MemoryStream ms = new MemoryStream())
                {

                    if (WifiAuthType == "WPA/WPA2")
                    {
                        WifiAuth = PayloadGenerator.WiFi.Authentication.WPA;

                    }
                    if (WifiAuthType == "WEP")
                    {

                        WifiAuth = PayloadGenerator.WiFi.Authentication.WEP;
                    }
                    if (WifiAuthType == "No Password")
                    {
                        WifiAuth = PayloadGenerator.WiFi.Authentication.nopass;
                        WifiPass = "";
                    }


                    PayloadGenerator.WiFi _wifigenerator = new PayloadGenerator.WiFi(WifiName, WifiPass, WifiAuth);
                    string payload = _wifigenerator.ToString();
                    payload = payload.Replace("\"", "");


                    QRCodeGenerator qrGenerator = new QRCodeGenerator();
                    QRCodeData qrCodeData = qrGenerator.CreateQrCode(payload, QRCodeGenerator.ECCLevel.Q);
                    QRCode qrCode = new QRCode(qrCodeData);
                    Bitmap qrCodeImage = qrCode.GetGraphic(20, BgColor, FgColor);

                    qrCodeImage.Save(ms, ImageFormat.Png);
                    QRCodeStr = "data:image/png;base64," + Convert.ToBase64String(ms.ToArray());
                    WifiName = "";
                    WifiPass = "";
                    coffee = true;
                }
            }
            else
            {
                coffee = false;
            }
        }
    }


    public void UpdateSelectedColor1(MudColor value)
    {
        _pickerColorB = value;
        ShowColorB = _pickerColorB;
        FgColor = value.Value;
        FgColor = FgColor.Substring(0, 7);

    }
    public void UpdateSelectedColor2(MudColor value)
    {
        _pickerColorF = value;
        ShowColorF = _pickerColorF;
        BgColor = value.Value;
        BgColor = BgColor.Substring(0, 7);
    }

    public void ForceReload()
    {
        uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
    }

    protected override void OnInitialized()
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
        Snackbar.Configuration.SnackbarVariant = Variant.Text;
    }
}
